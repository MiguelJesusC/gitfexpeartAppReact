{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","trim","length","cats","preventDefault","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","catch","err","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,cADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OACI,mCACI,sBAAMC,SAVO,SAACC,GACfH,EAAWI,OAAOC,OAAS,IAC1BP,GAAe,SAAAQ,GAAI,OAAKN,GAAL,mBAAoBM,OACvCL,EAAc,KAGlBE,EAAEI,kBAIE,SACI,uBACIC,KAAK,OACLC,MAAOT,EACPU,SAlBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,QCNlBG,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACrC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKL,IACpB,kCAAMC,EAAN,W,uBCNCK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,mGACqFO,UAAUF,IAD/F,SAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAzB,GAAM,IAAD,EACvB,MAAO,CACHU,GAAIV,EAAEU,GACNC,MAAOX,EAAEW,MACTC,IAAG,UAAEZ,EAAE0B,cAAJ,aAAE,EAAUC,iBAAiBf,QARrB,kBAWZY,GAXY,4CAAH,sDCMPI,EAAU,SAAC,GAAkB,IAAhBX,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EAEZrB,mBAAS,CAC/B2B,KAAM,GACNM,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAZAC,qBAAW,WACPhB,EAAQC,GACPgB,MAAM,SAAAC,GACHH,EAAS,CACLR,KAAMW,EACNL,SAAS,OAEdM,OAAM,SAACC,GACN,MAAMA,OAEX,CAACnB,IAEGa,EDfmBO,CAAapB,GAA/BM,EAD6B,EAC7BA,KAAMM,EADuB,EACvBA,QAWd,OACI,qCACI,oBAAIhB,UAAU,kCAAd,SAAiDI,IAC/CY,GAAW,mBAAGhB,UAAU,wCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEQU,EAAKE,KAAI,SAAAzB,GAAC,OAAI,cAAC,EAAD,eAA4BA,GAAVA,EAAEU,aEnBzC4B,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,mBAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAI9B,OACI,qCACI,0CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ4C,EAAWd,KAAI,SAAAR,GACZ,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCX5CuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f4f81bed.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [InputValue, setInputValue] = useState('Hola Mundo')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        if(InputValue.trim().length > 2){\r\n            setCategories( cats => [InputValue, ...cats])\r\n            setInputValue('')\r\n        }\r\n\r\n        e.preventDefault()\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type='text'\r\n                    value={InputValue}\r\n                    onChange={ handleInputChange }\r\n                />\r\n            </form>\r\n        </>\r\n\r\n    )\r\n}\r\n    \r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={id} />\r\n            <p> { title} </p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=myKXFvf8Q0UXbJRK1n7QI55A2d78QpRO&limit=10&q=${encodeURI(category)}`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(e => {\r\n        return {\r\n            id: e.id,\r\n            title: e.title,\r\n            url: e.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem'\r\nimport { getGifs } from '../helpers/getGifs'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data, loading } = useFetchGifs(category);\r\n\r\n\r\n    // const [Images, setImages] = useState([])\r\n\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //     .then( img => setImages( img ))\r\n    // }, [category])\r\n\r\n\r\n    return (\r\n        <>  \r\n            <h3 className=\"animate__animated animate__fade\">{category}</h3>    \r\n            { loading && <p className=\"card animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    data.map(e => <GifGridItem key={e.id} {...e} />)\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { React, useState,useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [], \r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n        .then( imgs =>{ \r\n            setState({ \r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        }).catch((err) =>{ \r\n            throw err\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import { React, useState } from 'react'\r\nimport { AddCategory } from './AddCategory'\r\nimport { GifGrid } from './GifGrid'\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Rick and Morty'])\r\n\r\n    return (\r\n        <>\r\n            <h2> Gif App</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(category => {\r\n                       return <GifGrid key={category} category={category} />\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import App from './App';\nimport {GifExpertApp} from './components/GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}